Mellanox SAI implementation release notes
==========================================

Release 1.8.1
---------------

Current implementation is partial. 

Not all the APIs that are defined were fully implemented in this release. Missing flows or implementation are noted in the code as "TODO : ..." comments.

The code was tested to work on X86, at Beta level.
No testing was done on PPC.
The code compiles with, and was tested with, SDK version 4.2.4000.

As a precondition to running SAI initialize switch, SDK must not be running (If it's running, terminate it with dvs_stop.sh). 
The application must provide one key/value pair on profile services, "config_file=/usr/share/sai_2700.xml" / "config_file=/usr/share/sai_2410.xml" / / "config_file=/usr/share/sai_2420.xml" / "config_file=/usr/share/sai_2100.xml", depending on system type.
On shutdown switch, SAI will perform all the necessary clean up and terminate the SDK.

The following functions / attributes are not supported / implemented :
* SAI_NEXT_HOP_ATTR_ROUTER_INTERFACE_ID get in router interface API
* SAI_PORT_ATTR_MAX_LEARNED_ADDRESSES, SAI_PORT_ATTR_FDB_LEARNING_LIMIT_VIOLATION in port API
* Port advertised and remote advertised attributes
* Only the mandatory set of attributes are accepted on Create port
* IP/IPv6 counters, SAI_PORT_STAT_IF_IN_VLAN_DISCARDS, SAI_PORT_STAT_IF_OUT_QLEN, SAI_PORT_STAT_ETHER_RX_OVERSIZE_PKTS, SAI_PORT_STAT_ETHER_TX_OVERSIZE_PKTS, SAI_PORT_STAT_ETHER_STATS_TX_NO_ERRORS, SAI_PORT_STAT_ETHER_STATS_RX_NO_ERRORS, Port EEE counters, Port PFC ON2OFF counters, clear port stats for specific counters, in port counters API
* SAI_ROUTE_ATTR_NEXT_HOP_GROUP_ID get in route API
* SAI_VIRTUAL_ROUTER_ATTR_ADMIN_V4_STATE set, 
SAI_VIRTUAL_ROUTER_ATTR_ADMIN_V6_STATE set, SAI_VIRTUAL_ROUTER_ATTR_SRC_MAC_ADDRESS, 
SAI_VIRTUAL_ROUTER_ATTR_VIOLATION_TTL1_ACTION, SAI_VIRTUAL_ROUTER_ATTR_VIOLATION_IP_OPTIONS in router API
* SAI_SWITCH_ATTR_FDB_TABLE_SIZE, SAI_SWITCH_ATTR_BCAST_CPU_FLOOD_ENABLE, SAI_SWITCH_ATTR_MCAST_CPU_FLOOD_ENABLE, SAI_SWITCH_ATTR_VIOLATION_TTL1_ACTION get, SAI_SWITCH_ATTR_SRC_MAC_ADDRESS set, SAI_SWITCH_ATTR_MAX_LEARNED_ADDRESSES, SAI_SWITCH_ATTR_FDB_MULTICAST_MISS_ACTION set in switch API
* SAI_VLAN_ATTR_MAX_LEARNED_ADDRESSES in vlan API
* vlan counters API
* notification callbacks - switch shutdown request
* SAI_INGRESS_PRIORITY_GROUP_STAT_PACKETS, SAI_INGRESS_PRIORITY_GROUP_STAT_BYTES in buffer API
* SAI_HASH_UDF_GROUP_LIST in hash API
* saiobject.h query objects functions
* bulk functions
* Sample packet is supported only on ingress traffic to port, at profile mode (exclusive instance per port). Netflow mode (shared, aggregated traffic), Egress traffic on port (SAI_PORT_ATTR_EGRESS_SAMPLEPACKET_ENABLE) and ACL ingress/egress (SAI_ACL_ENTRY_ATTR_ACTION_INGRESS_SAMPLEPACKET_ENABLE, SAI_ACL_ENTRY_ATTR_ACTION_EGRESS_SAMPLEPACKET_ENABLE) are not supported.

ACL has the following limitations :
* Not all match keys / actions are supported
* Vlan ranges not implemented
* Supporting 16 ACL ranges objects
* ACL Switch bind points SAI_SWITCH_ATTR_DEFAULT_INGRESS_ACL_LIST, SAI_SWITCH_ATTR_DEFAULT_EGRESS_ACL_LIST are not implemented
* ACL table can only be a member of a single ACL group, and can't be a member in multiple groups
* ACL VLAN bind point only works for ingress stage, SAI_VLAN_ATTR_EGRESS_ACL isn't supported
* ACL should be applied on LAG and not on member ports of a LAG

IP over IP has the following limitations :
* Set is not supported on any attribute in sai_tunnel_attr_t
* SAI_TUNNEL_ATTR_DECAP_MAPPERS is not able to be created or set
* Only SAI_TUNNEL_TTL_PIPE_MODEL is supported for SAI_TUNNEL_ATTR_DECAP_TTL_MODE on create and set
* Only IPv4 address is supported for SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_SRC_IP and SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_DST_IP on create
* Only SAI_TUNNEL_IPINIP and SAI_TUNNEL_IPINIP_GRE are supported for SAI_TUNNEL_ATTR_TYPE and SAI_TUNNEL_TERM_TABLE_ENTRY_ATTR_TUNNEL_TYPE on create
* SAI_TUNNEL_ENCAP_ECN_MODE_USER_DEFINED is not supported
* SAI_TUNNEL_DECAP_ECN_MODE_USER_DEFINED is not supported
* get_tunnel_attribute function will fail when trying to get the following values from a tunnel created without any encap attributes
  a.	SAI_TUNNEL_ATTR_ENCAP_DSCP_MODE
  b.	SAI_TUNNEL_ATTR_ENCAP_DSCP_VAL
* Currently DSCP mode, DSCP value and ECN mode are shared between the same type of tunnels. Change DSCP mode, DSCP value and ECN mode will affect all the tunnels of the same type. Tunnels are considered ‘the same type’ if both the following conditions are satisfied
  a.	SAI_TUNNEL_ATTR_TYPE has the same value
  b.	Tunnel direction has the same value. Direction has 3 types: encap, decap and symmetry
        i.	Encap: no decap attributes (start with SAI_TUNNEL_ATTR_ENCAP_) are configured during tunnel creation
        ii.	Decap: no encap attributes (start with SAI_TUNNEL_ATTR_DECAP_) are configured during tunnel creation
        iii.	Symmetry: Both encap and decap attributes are configured during tunnel creation

In case WRED profile has WRED enabled for at least one color and ECN mark mode enabled for at least one color, the enabled colors for WRED and ECN must be the same (For example, can't have SAI_WRED_ATTR_GREEN_ENABLE=true and SAI_WRED_ATTR_ECN_MARK_MODE=SAI_ECN_MARK_MODE_YELLOW)
Clear queue stats for specific counters always clears all available counters
Host interface user defined traps support a single instance of each user defined trap
Host interface wildcard table entry overwrites the configured channel value for all traps at the time of the creation, there is no priority implemented. WA - first create wildcard entry and then specific entries.
