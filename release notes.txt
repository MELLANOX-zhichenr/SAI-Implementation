Mellanox SAI implementation release notes
==========================================

Release 1.6.0
---------------

Current implementation is partial. 

Not all the APIs that are defined were fully implemented in this release. Missing flows or implementation are noted in the code as "TODO : ..." comments.

The code was tested to work on X86, at Beta level.
No testing was done on PPC.
The code compiles with, and was tested with, SDK version 4.2.1008.

As a precondition to running SAI initialize switch, SDK must not be running (If it's running, terminate it with dvs_stop.sh). 
The application must provide one key/value pair on profile services, "config_file=/usr/share/sai_2700.xml" / "config_file=/usr/share/sai_2410.xml", depending on system type.
On shutdown switch, SAI will perform all the necessary clean up and terminate the SDK.

The following functions / attributes are not supported / implemented :
* SAI_NEXT_HOP_ATTR_ROUTER_INTERFACE_ID get in router interface API
* SAI_PORT_ATTR_MAX_LEARNED_ADDRESSES, SAI_PORT_ATTR_FDB_LEARNING_LIMIT_VIOLATION in port API
* IP/IPv6 counters, SAI_PORT_STAT_IF_IN_VLAN_DISCARDS, SAI_PORT_STAT_IF_OUT_QLEN, SAI_PORT_STAT_ETHER_RX_OVERSIZE_PKTS, SAI_PORT_STAT_ETHER_TX_OVERSIZE_PKTS, SAI_PORT_STAT_ETHER_STATS_TX_NO_ERRORS, SAI_PORT_STAT_ETHER_STATS_RX_NO_ERRORS in port counters API
* SAI_ROUTE_ATTR_NEXT_HOP_GROUP_ID get in route API
* SAI_VIRTUAL_ROUTER_ATTR_ADMIN_V4_STATE set, 
SAI_VIRTUAL_ROUTER_ATTR_ADMIN_V6_STATE set, SAI_VIRTUAL_ROUTER_ATTR_SRC_MAC_ADDRESS, 
SAI_VIRTUAL_ROUTER_ATTR_VIOLATION_TTL1_ACTION, SAI_VIRTUAL_ROUTER_ATTR_VIOLATION_IP_OPTIONS in router API
* SAI_SWITCH_ATTR_FDB_TABLE_SIZE, SAI_SWITCH_ATTR_BCAST_CPU_FLOOD_ENABLE, SAI_SWITCH_ATTR_MCAST_CPU_FLOOD_ENABLE, SAI_SWITCH_ATTR_VIOLATION_TTL1_ACTION get, SAI_SWITCH_ATTR_SRC_MAC_ADDRESS set, SAI_SWITCH_ATTR_MAX_LEARNED_ADDRESSES, SAI_SWITCH_ATTR_FDB_UNICAST_MISS_ACTION, SAI_SWITCH_ATTR_FDB_BROADCAST_MISS_ACTION, SAI_SWITCH_ATTR_FDB_MULTICAST_MISS_ACTION in switch API
* SAI_VLAN_ATTR_MAX_LEARNED_ADDRESSES in vlan API
* vlan counters API
* notification callbacks - switch shutdown request
* port storm policers
* SAI_INGRESS_PRIORITY_GROUP_STAT_PACKETS, SAI_INGRESS_PRIORITY_GROUP_STAT_BYTES in buffer API
* SAI_HASH_UDF_GROUP_LIST in hash API
* saiobject.h query objects functions
* Sample packet is supported only on ingress traffic to port, at profile mode (exclusive instance per port). Netflow mode (shared, aggregated traffic), Egress traffic on port (SAI_PORT_ATTR_EGRESS_SAMPLEPACKET_ENABLE) and ACL ingress/egress (SAI_ACL_ENTRY_ATTR_ACTION_INGRESS_SAMPLEPACKET_ENABLE, SAI_ACL_ENTRY_ATTR_ACTION_EGRESS_SAMPLEPACKET_ENABLE) are not supported.

ACL has the following limitations :
* Only 1 Ingress group, 1 egress group, not supporting multiple groups
* Index in HW table = table size - entry priority value, not supporting full priority functionality, 2 entries will same priority will override each other
* Supporting limited amount of match keys / actions
* Vlan and L4 ranges not implemented

SAI_QUEUE_STAT_PACKETS, SAI_QUEUE_STAT_BYTES assumes one to one mapping and queue num=IEEE prio.
